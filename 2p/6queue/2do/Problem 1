let names = [];
names.push("Cynthia");
names.push("Jennifer");
console.log(names); // displays Cynthia,Jennifer
  names.shift();
let names = [];
names.push("Cynthia");
names.push("Jennifer");
console.log(names); // displays Cynthia,Jennifer
  names.shift();
console.log(names); // displays Jennifer
  function Queue() {
this.dataStore = [];
this.enqueue = enqueue;
this.dequeue = dequeue;
this.front = front;
this.back = back;
this.toString = toString;
this.empty = empty;
}
  function enqueue(element) {
this.dataStore.push(element);
}
  function dequeue() {
return this.dataStore.shift();
}
  function front() {
return this.dataStore[0];
}
function back() {
return this.dataStore[this.dataStore.length-1];
}

function toString() {
var retStr = "";
for (var i = 0; i < this.dataStore.length; ++i) {
retStr += this.dataStore[i] + "\n";
}
return retStr;
}

function empty() {
if (this.dataStore.length == 0) {
return true;
}
else {
return false;
}
}
  function Queue() {
this.dataStore = [];
this.enqueue = enqueue;
this.dequeue = dequeue;
this.front = front;
this.back = back;
this.toString = toString;
this.empty = empty;
}
function enqueue(element) {
this.dataStore.push(element);
}
function dequeue() {
return this.dataStore.shift();
}
function front() {
return this.dataStore[0];
}
function back() {
return this.dataStore[this.dataStore.length-1];
}
function toString() {
var retStr = "";
for (var i = 0; i < this.dataStore.length; ++i) {
retStr += this.dataStore[i] + "\n";
}
return retStr;
}
function empty() {
if (this.dataStore.length == 0) {
return true;
}
else {
return false;
}
}
// test program
var q = new Queue();
q.enqueue("Meredith");
q.enqueue("Cynthia");
q.enqueue("Jennifer");
  console.log(q.toString());
gq.dequeue();
console.log(q.toString());
console.log("Front of queue: " + q.front());
console.log("Back of queue: " + q.back());
